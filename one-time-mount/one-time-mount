#!/bin/bash

# options to add

# set -x

# --luks-device-dir
# --luks-device-size
# --key-device
# --key-size

umount_path=

while [ $# -gt 0 ];
do
    case $1 in
	--umount|-u)
	    shift
	    umount_path=$1
	    shift
	    break
	    ;;
    esac
done

if [ -n "$umount_path" ]; then
    ramdisk_path="$umount_path"
    ramdisk_name=$(basename ${ramdisk_path})
    luks_name=$ramdisk_name

    # shred all files in the LUKS volume
    find $ramdisk_path -uid $(id -u) -a -type f -execdir shred -z -u \{\} \; |& grep -v 'lost+found.*Permission denied'
    sync

    # Close the LUKS volume
    sudo umount $ramdisk_path
    sudo cryptsetup luksClose ${luks_name}

    # shred all files in the ramdisk mount
    find $ramdisk_path -uid $(id -u) -a -type f -execdir shred -z -u \{\} \;
    sync

    sudo umount $ramdisk_path

    # Give the ramdisk directory a random name
    ramdisk_new_name=$(basename $(mktemp --dry-run $(echo $ramdisk_name | tr '[:print:]' X)))
    mv ${ramdisk_path} ${ramdisk_new_name}
    sync

    rmdir ${ramdisk_new_name}
    sync
    exit 0
fi

# Steps

# 1) Create a directory with a random name (ramdisk_name)
# 2) Mount a ramdisk on top of ramdisk_name
# 3) Create a sparse file with a random name in the ramdisk
# 4) Generate a LUKS key file
# 5) Create a LUKS volume
# 6) Open the LUKS volume
# 7) Shred the LUKS key
# 8) Mount the LUKS volume

ramdisk_size_mb=600
ramdisk_name=$(mktemp -d XXXXXXXXXXXXXX)
ramdisk_path=${ramdisk_name}
luks_mount_path=${ramdisk_path}
luks_name=$(basename ${ramdisk_path})

sudo mount -t ramfs -o size=${ramdisk_size_mb}M ${ramdisk_name} $ramdisk_path
sudo chown -R $(id -u):$(id -g) ${ramdisk_path}

luks_device=$(mktemp -p ${ramdisk_path} .XXXXXX)
luks_key_path=$(mktemp -p ${ramdisk_path} .XXXXXX)

# generate sparse device file for loopback mounting
dd if=/dev/zero of=${luks_device} seek=$((ramdisk_size_mb - 50))M count=0 bs=1 > /dev/null

# generate key file
dd if=/dev/urandom of=${luks_key_path} bs=512 count=1 > /dev/null

# create LUKS volume
sudo cryptsetup -q luksFormat ${luks_device} ${luks_key_path}
sudo cryptsetup --key-file ${luks_key_path} luksOpen ${luks_device} ${luks_name}

# throw away the key
shred -z -u ${luks_key_path}
sync

sudo mkfs.ext2 -E root_owner=$(id -u):$(id -g) /dev/mapper/${luks_name} > /dev/null

# mount encrypted device
mkdir -p ${luks_mount_path}
sudo mount -o user /dev/mapper/${luks_name} ${luks_mount_path}

echo ${luks_mount_path}
